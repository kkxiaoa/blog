{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{222:function(e,v,t){\"use strict\";t.r(v);var _=t(28),a=Object(_.a)({},(function(){var e=this,v=e.$createElement,t=e._self._c||v;return t(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[t(\"p\",[t(\"img\",{attrs:{src:\"/img/nginx.jpg\",alt:\"image\"}})]),e._v(\" \"),t(\"h2\",{attrs:{id:\"nginx在应用程序中的作用\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#nginx在应用程序中的作用\"}},[e._v(\"#\")]),e._v(\" nginx在应用程序中的作用\")]),e._v(\" \"),t(\"ul\",[t(\"li\",[e._v(\"解决跨域\")]),e._v(\" \"),t(\"li\",[e._v(\"请求过滤\")]),e._v(\" \"),t(\"li\",[e._v(\"配置gzip\")]),e._v(\" \"),t(\"li\",[e._v(\"负载均衡\")]),e._v(\" \"),t(\"li\",[e._v(\"静态资源服务器\")])]),e._v(\" \"),t(\"blockquote\",[t(\"p\",[e._v(\"nginx是一个高性能的HTTP和反向代理服务器，也是一个通用的TCP/UDP代理服务器，最初由俄罗斯人Igor Sysoev编写。\")])]),e._v(\" \"),t(\"p\",[e._v(\"nginx现在几乎是众多大型网站的必用技术，大多数情况下，我们不需要亲自去配置它，但是了解它在应用程序中所担任的角色，以及如何解决这些问题是非常必要的。\")]),e._v(\" \"),t(\"p\",[e._v(\"下面我将从nginx在企业中的真实应用来解释nginx在应用程序中起到的作用。\")]),e._v(\" \"),t(\"p\",[e._v(\"为了便于理解，首先先来了解一下一些基础知识，\"),t(\"code\",[e._v(\"nginx是一个高性能的反向代理服务器\")]),e._v(\"那么什么是反向代理呢？\")]),e._v(\" \"),t(\"h2\",{attrs:{id:\"正向代理与反向代理\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#正向代理与反向代理\"}},[e._v(\"#\")]),e._v(\" 正向代理与反向代理\")]),e._v(\" \"),t(\"p\",[t(\"strong\",[e._v(\"代理\")]),e._v(\"是在服务器和客户端之间假设的一层服务器，\"),t(\"strong\",[e._v(\"代理\")]),e._v(\"将接收客户端的请求并将它转发给服务器，然后将服务端的响应转发给客户端。\")]),e._v(\" \"),t(\"p\",[e._v(\"不管是正向代理还是反向代理，实现的都是上面的功能。\")]),e._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"https://lsqimg-1257917459.cos-website.ap-beijing.myqcloud.com/blog/nginx2.png\",alt:\"image\"}})]),e._v(\" \"),t(\"h4\",{attrs:{id:\"正向代理\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#正向代理\"}},[e._v(\"#\")]),e._v(\" 正向代理\")]),e._v(\" \"),t(\"blockquote\",[t(\"p\",[t(\"strong\",[e._v(\"正向代理\")]),e._v(\"，意思是一个位于客户端和原始服务器(origin server)之间的服务器，为了从原始服务器取得内容，客户端向代理发送一个请求并指定目标(原始服务器)，然后代理向原始服务器转交请求并将获得的内容返回给客户端。\")])]),e._v(\" \"),t(\"p\",[t(\"strong\",[e._v(\"正向代理\")]),e._v(\"是为我们服务的，即为客户端服务的，客户端可以根据正向代理访问到它本身无法访问到的服务器资源。\")]),e._v(\" \"),t(\"p\",[t(\"strong\",[e._v(\"正向代理\")]),e._v(\"对我们是透明的，对服务端是非透明的，即服务端并不知道自己收到的是来自代理的访问还是来自真实客户端的访问。\")]),e._v(\" \"),t(\"h4\",{attrs:{id:\"反向代理\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#反向代理\"}},[e._v(\"#\")]),e._v(\" 反向代理\")]),e._v(\" \"),t(\"blockquote\",[t(\"p\",[e._v(\"** 反向代理**（Reverse Proxy）方式是指以代理服务器来接受internet上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给internet上请求连接的客户端，此时代理服务器对外就表现为一个反向代理服务器。\")])]),e._v(\" \"),t(\"p\",[t(\"strong\",[e._v(\"反向代理\")]),e._v(\"是为服务端服务的，反向代理可以帮助服务器接收来自客户端的请求，帮助服务器做请求转发，负载均衡等。\")]),e._v(\" \"),t(\"p\",[t(\"strong\",[e._v(\"反向代理\")]),e._v(\"对服务端是透明的，对我们是非透明的，即我们并不知道自己访问的是代理服务器，而服务器知道反向代理在为他服务。\")]),e._v(\" \"),t(\"h2\",{attrs:{id:\"基本配置\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#基本配置\"}},[e._v(\"#\")]),e._v(\" 基本配置\")]),e._v(\" \"),t(\"h4\",{attrs:{id:\"配置结构\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#配置结构\"}},[e._v(\"#\")]),e._v(\" 配置结构\")]),e._v(\" \"),t(\"p\",[e._v(\"下面是一个nginx配置文件的基本结构：\")]),e._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"https://lsqimg-1257917459.cos-website.ap-beijing.myqcloud.com/blog/nginx1.png\",alt:\"image\"}})]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"events { \\n\\n}\\n\\nhttp \\n{\\n    server\\n    { \\n        location path\\n        {\\n            ...\\n        }\\n        location path\\n        {\\n            ...\\n        }\\n     }\\n\\n    server\\n    {\\n        ...\\n    }\\n\\n}\\n\")])])]),t(\"ul\",[t(\"li\",[t(\"code\",[e._v(\"main\")]),e._v(\":nginx的全局配置，对全局生效。\")]),e._v(\" \"),t(\"li\",[t(\"code\",[e._v(\"events\")]),e._v(\":配置影响nginx服务器或与用户的网络连接。\")]),e._v(\" \"),t(\"li\",[t(\"code\",[e._v(\"http\")]),e._v(\"：可以嵌套多个server，配置代理，缓存，日志定义等绝大多数功能和第三方模块的配置。\")]),e._v(\" \"),t(\"li\",[t(\"code\",[e._v(\"server\")]),e._v(\"：配置虚拟主机的相关参数，一个http中可以有多个server。\")]),e._v(\" \"),t(\"li\",[t(\"code\",[e._v(\"location\")]),e._v(\"：配置请求的路由，以及各种页面的处理情况。\")]),e._v(\" \"),t(\"li\",[t(\"code\",[e._v(\"upstream\")]),e._v(\"：配置后端服务器具体地址，负载均衡配置不可或缺的部分。\")])]),e._v(\" \"),t(\"h4\",{attrs:{id:\"内置变量\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#内置变量\"}},[e._v(\"#\")]),e._v(\" 内置变量\")]),e._v(\" \"),t(\"p\",[e._v(\"下面是\"),t(\"code\",[e._v(\"nginx\")]),e._v(\"一些配置中常用的内置全局变量，你可以在配置的任何位置使用它们。\")]),e._v(\" \"),t(\"table\",[t(\"thead\",[t(\"tr\",[t(\"th\",[e._v(\"变量名\")]),e._v(\" \"),t(\"th\",[e._v(\"功能\")])])]),e._v(\" \"),t(\"tbody\",[t(\"tr\",[t(\"td\",[t(\"code\",[e._v(\"$host\")])]),e._v(\" \"),t(\"td\",[e._v(\"请求信息中的\"),t(\"code\",[e._v(\"Host\")]),e._v(\"，如果请求中没有\"),t(\"code\",[e._v(\"Host\")]),e._v(\"行，则等于设置的服务器名\")])]),e._v(\" \"),t(\"tr\",[t(\"td\",[t(\"code\",[e._v(\"$request_method\")])]),e._v(\" \"),t(\"td\",[e._v(\"客户端请求类型，如\"),t(\"code\",[e._v(\"GET\")]),e._v(\"、\"),t(\"code\",[e._v(\"POST\")])])]),e._v(\" \"),t(\"tr\",[t(\"td\",[t(\"code\",[e._v(\"$remote_addr\")])]),e._v(\" \"),t(\"td\",[e._v(\"客户端的\"),t(\"code\",[e._v(\"IP\")]),e._v(\"地址\")])]),e._v(\" \"),t(\"tr\",[t(\"td\",[t(\"code\",[e._v(\"$args\")])]),e._v(\" \"),t(\"td\",[e._v(\"请求中的参数\")])]),e._v(\" \"),t(\"tr\",[t(\"td\",[t(\"code\",[e._v(\"$content_length\")])]),e._v(\" \"),t(\"td\",[e._v(\"请求头中的\"),t(\"code\",[e._v(\"Content-length\")]),e._v(\"字段\")])]),e._v(\" \"),t(\"tr\",[t(\"td\",[t(\"code\",[e._v(\"$http_user_agent\")])]),e._v(\" \"),t(\"td\",[e._v(\"客户端agent信息\")])]),e._v(\" \"),t(\"tr\",[t(\"td\",[t(\"code\",[e._v(\"$http_cookie\")])]),e._v(\" \"),t(\"td\",[e._v(\"客户端cookie信息\")])]),e._v(\" \"),t(\"tr\",[t(\"td\",[t(\"code\",[e._v(\"$remote_addr\")])]),e._v(\" \"),t(\"td\",[e._v(\"客户端的IP地址\")])]),e._v(\" \"),t(\"tr\",[t(\"td\",[t(\"code\",[e._v(\"$remote_port\")])]),e._v(\" \"),t(\"td\",[e._v(\"客户端的端口\")])]),e._v(\" \"),t(\"tr\",[t(\"td\",[t(\"code\",[e._v(\"$server_protocol\")])]),e._v(\" \"),t(\"td\",[e._v(\"请求使用的协议，如\"),t(\"code\",[e._v(\"HTTP/1.0\")]),e._v(\"、·HTTP/1.1`\")])]),e._v(\" \"),t(\"tr\",[t(\"td\",[t(\"code\",[e._v(\"$server_addr\")])]),e._v(\" \"),t(\"td\",[e._v(\"服务器地址\")])]),e._v(\" \"),t(\"tr\",[t(\"td\",[t(\"code\",[e._v(\"$server_name\")])]),e._v(\" \"),t(\"td\",[e._v(\"服务器名称\")])]),e._v(\" \"),t(\"tr\",[t(\"td\",[t(\"code\",[e._v(\"$server_port\")])]),e._v(\" \"),t(\"td\",[e._v(\"服务器的端口号\")])])])]),e._v(\" \"),t(\"h2\",{attrs:{id:\"解决跨域\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#解决跨域\"}},[e._v(\"#\")]),e._v(\" 解决跨域\")]),e._v(\" \"),t(\"p\",[e._v(\"先追本溯源以下，跨域究竟是怎么回事。\")]),e._v(\" \"),t(\"h4\",{attrs:{id:\"跨域的定义\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#跨域的定义\"}},[e._v(\"#\")]),e._v(\" 跨域的定义\")]),e._v(\" \"),t(\"p\",[e._v(\"同源策略限制了从同一个源加载的文档或脚本如何与来自另一个源的资源进行交互。这是一个用于隔离潜在恶意文件的重要安全机制。通常不允许不同源间的读操作。\")]),e._v(\" \"),t(\"h4\",{attrs:{id:\"同源的定义\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#同源的定义\"}},[e._v(\"#\")]),e._v(\" 同源的定义\")]),e._v(\" \"),t(\"p\",[e._v(\"如果两个页面的协议，端口（如果有指定）和域名都相同，则两个页面具有相同的源。\")]),e._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"https://lsqimg-1257917459.cos-website.ap-beijing.myqcloud.com/blog/tongyuan.png\",alt:\"image\"}})]),e._v(\" \"),t(\"h4\",{attrs:{id:\"nginx解决跨域的原理\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#nginx解决跨域的原理\"}},[e._v(\"#\")]),e._v(\" nginx解决跨域的原理\")]),e._v(\" \"),t(\"p\",[e._v(\"例如：\")]),e._v(\" \"),t(\"ul\",[t(\"li\",[e._v(\"前端server的域名为：\"),t(\"code\",[e._v(\"fe.server.com\")])]),e._v(\" \"),t(\"li\",[e._v(\"后端服务的域名为：\"),t(\"code\",[e._v(\"dev.server.com\")])])]),e._v(\" \"),t(\"p\",[e._v(\"现在我在\"),t(\"code\",[e._v(\"fe.server.com\")]),e._v(\"对\"),t(\"code\",[e._v(\"dev.server.com\")]),e._v(\"发起请求一定会出现跨域。\")]),e._v(\" \"),t(\"p\",[e._v(\"现在我们只需要启动一个nginx服务器，将\"),t(\"code\",[e._v(\"server_name\")]),e._v(\"设置为\"),t(\"code\",[e._v(\"fe.server.com\")]),e._v(\",然后设置相应的location以拦截前端需要跨域的请求，最后将请求代理回\"),t(\"code\",[e._v(\"dev.server.com\")]),e._v(\"。如下面的配置：\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"server {\\n        listen       80;\\n        server_name  fe.server.com;\\n        location / {\\n                proxy_pass dev.server.com;\\n        }\\n}\\n\")])])]),t(\"p\",[e._v(\"这样可以完美绕过浏览器的同源策略：\"),t(\"code\",[e._v(\"fe.server.com\")]),e._v(\"访问\"),t(\"code\",[e._v(\"nginx\")]),e._v(\"的\"),t(\"code\",[e._v(\"fe.server.com\")]),e._v(\"属于同源访问，而\"),t(\"code\",[e._v(\"nginx\")]),e._v(\"对服务端转发的请求不会触发浏览器的同源策略。\")]),e._v(\" \"),t(\"h2\",{attrs:{id:\"请求过滤\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#请求过滤\"}},[e._v(\"#\")]),e._v(\" 请求过滤\")]),e._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"https://lsqimg-1257917459.cos-website.ap-beijing.myqcloud.com/blog/404.jpg\",alt:\"image\"}})]),e._v(\" \"),t(\"p\",[e._v(\"根据状态码过滤\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"error_page 500 501 502 503 504 506 /50x.html;\\n    location = /50x.html {\\n        #将跟路径改编为存放html的路径。\\n        root /root/static/html;\\n    }\\n\")])])]),t(\"p\",[e._v(\"根据URL名称过滤，精准匹配URL，不匹配的URL全部重定向到主页。\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"location / {\\n    rewrite  ^.*$ /index.html  redirect;\\n}\\n\")])])]),t(\"p\",[e._v(\"根据请求类型过滤。\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"if ( $request_method !~ ^(GET|POST|HEAD)$ ) {\\n        return 403;\\n    }\\n\")])])]),t(\"h2\",{attrs:{id:\"配置gzip\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#配置gzip\"}},[e._v(\"#\")]),e._v(\" 配置gzip\")]),e._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"https://lsqimg-1257917459.cos-website.ap-beijing.myqcloud.com/blog/gzip.jpg\",alt:\"image\"}})]),e._v(\" \"),t(\"p\",[t(\"code\",[e._v(\"GZIP\")]),e._v(\"是规定的三种标准HTTP压缩格式之一。目前绝大多数的网站都在使用\"),t(\"code\",[e._v(\"GZIP\")]),e._v(\"传输 \"),t(\"code\",[e._v(\"HTML\")]),e._v(\"、\"),t(\"code\",[e._v(\"CSS\")]),e._v(\"、\"),t(\"code\",[e._v(\"JavaScript\")]),e._v(\" 等资源文件。\")]),e._v(\" \"),t(\"p\",[e._v(\"对于文本文件，\"),t(\"code\",[e._v(\"GZip\")]),e._v(\" 的效果非常明显，开启后传输所需流量大约会降至 \"),t(\"code\",[e._v(\"1/4 ~ 1/3\")]),e._v(\"。\")]),e._v(\" \"),t(\"p\",[e._v(\"并不是每个浏览器都支持\"),t(\"code\",[e._v(\"gzip\")]),e._v(\"的，如何知道客户端是否支持\"),t(\"code\",[e._v(\"gzip\")]),e._v(\"呢，请求头中的\"),t(\"code\",[e._v(\"Accept-Encoding\")]),e._v(\"来标识对压缩的支持。\")]),e._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"https://lsqimg-1257917459.cos-website.ap-beijing.myqcloud.com/blog/gzip1.png\",alt:\"image\"}})]),e._v(\" \"),t(\"p\",[e._v(\"启用\"),t(\"code\",[e._v(\"gzip\")]),e._v(\"同时需要客户端和服务端的支持，如果客户端支持\"),t(\"code\",[e._v(\"gzip\")]),e._v(\"的解析，那么只要服务端能够返回\"),t(\"code\",[e._v(\"gzip\")]),e._v(\"的文件就可以启用\"),t(\"code\",[e._v(\"gzip\")]),e._v(\"了,我们可以通过\"),t(\"code\",[e._v(\"nginx\")]),e._v(\"的配置来让服务端支持\"),t(\"code\",[e._v(\"gzip\")]),e._v(\"。下面的\"),t(\"code\",[e._v(\"respone\")]),e._v(\"中\"),t(\"code\",[e._v(\"content-encoding:gzip\")]),e._v(\"，指服务端开启了\"),t(\"code\",[e._v(\"gzip\")]),e._v(\"的压缩方式。\")]),e._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"https://lsqimg-1257917459.cos-website.ap-beijing.myqcloud.com/blog/gzip2.png\",alt:\"image\"}})]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"    gzip                    on;\\n    gzip_http_version       1.1;        \\n    gzip_comp_level         5;\\n    gzip_min_length         1000;\\n    gzip_types text/csv text/xml text/css text/plain text/javascript application/javascript application/x-javascript application/json application/xml;\\n\")])])]),t(\"h4\",{attrs:{id:\"gzip\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#gzip\"}},[e._v(\"#\")]),e._v(\" gzip\")]),e._v(\" \"),t(\"ul\",[t(\"li\",[e._v(\"开启或者关闭\"),t(\"code\",[e._v(\"gzip\")]),e._v(\"模块\")]),e._v(\" \"),t(\"li\",[e._v(\"默认值为\"),t(\"code\",[e._v(\"off\")])]),e._v(\" \"),t(\"li\",[e._v(\"可配置为\"),t(\"code\",[e._v(\"on / off\")])])]),e._v(\" \"),t(\"h4\",{attrs:{id:\"gzip-http-version\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#gzip-http-version\"}},[e._v(\"#\")]),e._v(\" gzip_http_version\")]),e._v(\" \"),t(\"ul\",[t(\"li\",[e._v(\"启用 \"),t(\"code\",[e._v(\"GZip\")]),e._v(\" 所需的\"),t(\"code\",[e._v(\"HTTP\")]),e._v(\" 最低版本\")]),e._v(\" \"),t(\"li\",[e._v(\"默认值为\"),t(\"code\",[e._v(\"HTTP/1.1\")])])]),e._v(\" \"),t(\"p\",[e._v(\"这里为什么默认版本不是\"),t(\"code\",[e._v(\"1.0\")]),e._v(\"呢？\")]),e._v(\" \"),t(\"p\",[t(\"code\",[e._v(\"HTTP\")]),e._v(\" 运行在\"),t(\"code\",[e._v(\"TCP\")]),e._v(\" 连接之上，自然也有着跟\"),t(\"code\",[e._v(\"TCP\")]),e._v(\" 一样的三次握手、慢启动等特性。\")]),e._v(\" \"),t(\"p\",[e._v(\"启用持久连接情况下，服务器发出响应后让\"),t(\"code\",[e._v(\"TCP\")]),e._v(\"连接继续打开着。同一对客户/服务器之间的后续请求和响应可以通过这个连接发送。\")]),e._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"https://lsqimg-1257917459.cos-website.ap-beijing.myqcloud.com/blog/keepalive.png\",alt:\"image\"}})]),e._v(\" \"),t(\"p\",[e._v(\"为了尽可能的提高 \"),t(\"code\",[e._v(\"HTTP\")]),e._v(\" 性能，使用持久连接就显得尤为重要了。\")]),e._v(\" \"),t(\"p\",[t(\"code\",[e._v(\"HTTP/1.1\")]),e._v(\"默认支持\"),t(\"code\",[e._v(\"TCP\")]),e._v(\"持久连接，\"),t(\"code\",[e._v(\"HTTP/1.0\")]),e._v(\" 也可以通过显式指定 \"),t(\"code\",[e._v(\"Connection: keep-alive\")]),e._v(\" 来启用持久连接。对于\"),t(\"code\",[e._v(\"TCP\")]),e._v(\"持久连接上的\"),t(\"code\",[e._v(\"HTTP\")]),e._v(\" 报文，客户端需要一种机制来准确判断结束位置，而在 \"),t(\"code\",[e._v(\"HTTP/1.0\")]),e._v(\"中，这种机制只有\"),t(\"code\",[e._v(\"Content-Length\")]),e._v(\"。而在\"),t(\"code\",[e._v(\"HTTP/1.1\")]),e._v(\"中新增的 \"),t(\"code\",[e._v(\"Transfer-Encoding: chunked\")]),e._v(\" 所对应的分块传输机制可以完美解决这类问题。\")]),e._v(\" \"),t(\"p\",[t(\"code\",[e._v(\"nginx\")]),e._v(\"同样有着配置\"),t(\"code\",[e._v(\"chunked的\")]),e._v(\"属性\"),t(\"code\",[e._v(\"chunked_transfer_encoding\")]),e._v(\"，这个属性是默认开启的。\")]),e._v(\" \"),t(\"p\",[t(\"code\",[e._v(\"Nginx\")]),e._v(\"在启用了\"),t(\"code\",[e._v(\"GZip\")]),e._v(\"的情况下，不会等文件 \"),t(\"code\",[e._v(\"GZip\")]),e._v(\" 完成再返回响应，而是边压缩边响应，这样可以显著提高 \"),t(\"code\",[e._v(\"TTFB\")]),e._v(\"(\"),t(\"code\",[e._v(\"Time To First Byte\")]),e._v(\"，首字节时间，WEB 性能优化重要指标)。这样唯一的问题是，\"),t(\"code\",[e._v(\"Nginx\")]),e._v(\" 开始返回响应时，它无法知道将要传输的文件最终有多大，也就是无法给出\"),t(\"code\",[e._v(\"Content-Length\")]),e._v(\"这个响应头部。\")]),e._v(\" \"),t(\"p\",[e._v(\"所以，在\"),t(\"code\",[e._v(\"HTTP1.0\")]),e._v(\"中如果利用\"),t(\"code\",[e._v(\"Nginx\")]),e._v(\"启用了\"),t(\"code\",[e._v(\"GZip\")]),e._v(\"，是无法获得\"),t(\"code\",[e._v(\"Content-Length\")]),e._v(\"的，这导致HTTP1.0中开启持久链接和使用\"),t(\"code\",[e._v(\"GZip\")]),e._v(\"只能二选一，所以在这里\"),t(\"code\",[e._v(\"gzip_http_version\")]),e._v(\"默认设置为\"),t(\"code\",[e._v(\"1.1\")]),e._v(\"。\")]),e._v(\" \"),t(\"h4\",{attrs:{id:\"gzip-comp-level\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#gzip-comp-level\"}},[e._v(\"#\")]),e._v(\" gzip_comp_level\")]),e._v(\" \"),t(\"ul\",[t(\"li\",[e._v(\"压缩级别，级别越高压缩率越大，当然压缩时间也就越长（传输快但比较消耗cpu）。\")]),e._v(\" \"),t(\"li\",[e._v(\"默认值为 \"),t(\"code\",[e._v(\"1\")])]),e._v(\" \"),t(\"li\",[e._v(\"压缩级别取值为\"),t(\"code\",[e._v(\"1-9\")])])]),e._v(\" \"),t(\"h4\",{attrs:{id:\"gzip-min-length\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#gzip-min-length\"}},[e._v(\"#\")]),e._v(\" gzip_min_length\")]),e._v(\" \"),t(\"ul\",[t(\"li\",[e._v(\"设置允许压缩的页面最小字节数，\"),t(\"code\",[e._v(\"Content-Length\")]),e._v(\"小于该值的请求将不会被压缩\")]),e._v(\" \"),t(\"li\",[e._v(\"默认值:\"),t(\"code\",[e._v(\"0\")])]),e._v(\" \"),t(\"li\",[e._v(\"当设置的值较小时，压缩后的长度可能比原文件大，建议设置\"),t(\"code\",[e._v(\"1000\")]),e._v(\"以上\")])]),e._v(\" \"),t(\"h4\",{attrs:{id:\"gzip-types\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#gzip-types\"}},[e._v(\"#\")]),e._v(\" gzip_types\")]),e._v(\" \"),t(\"ul\",[t(\"li\",[e._v(\"要采用gzip压缩的文件类型(\"),t(\"code\",[e._v(\"MIME\")]),e._v(\"类型)\")]),e._v(\" \"),t(\"li\",[e._v(\"默认值:\"),t(\"code\",[e._v(\"text/html\")]),e._v(\"(默认不压缩\"),t(\"code\",[e._v(\"js\")]),e._v(\"/\"),t(\"code\",[e._v(\"css\")]),e._v(\")\")])]),e._v(\" \"),t(\"h2\",{attrs:{id:\"负载均衡\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#负载均衡\"}},[e._v(\"#\")]),e._v(\" 负载均衡\")]),e._v(\" \"),t(\"h4\",{attrs:{id:\"什么是负载均衡\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#什么是负载均衡\"}},[e._v(\"#\")]),e._v(\" 什么是负载均衡\")]),e._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"https://lsqimg-1257917459.cos-website.ap-beijing.myqcloud.com/blog/nginx3.jpg\",alt:\"image\"}})]),e._v(\" \"),t(\"p\",[e._v(\"如上面的图，前面是众多的服务窗口，下面有很多用户需要服务，我们需要一个工具或策略来帮助我们将如此多的用户分配到每个窗口，来达到资源的充分利用以及更少的排队时间。\")]),e._v(\" \"),t(\"p\",[e._v(\"把前面的服务窗口想像成我们的后端服务器，而后面终端的人则是无数个客户端正在发起请求。负载均衡就是用来帮助我们将众多的客户端请求合理的分配到各个服务器，以达到服务端资源的充分利用和更少的请求时间。\")]),e._v(\" \"),t(\"h4\",{attrs:{id:\"nginx如何实现负载均衡\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#nginx如何实现负载均衡\"}},[e._v(\"#\")]),e._v(\" nginx如何实现负载均衡\")]),e._v(\" \"),t(\"p\",[e._v(\"Upstream指定后端服务器地址列表\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"upstream balanceServer {\\n    server 10.1.22.33:12345;\\n    server 10.1.22.34:12345;\\n    server 10.1.22.35:12345;\\n}\\n\")])])]),t(\"p\",[e._v(\"在server中拦截响应请求，并将请求转发到Upstream中配置的服务器列表。\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"    server {\\n        server_name  fe.server.com;\\n        listen 80;\\n        location /api {\\n            proxy_pass http://balanceServer;\\n        }\\n    }\\n\")])])]),t(\"p\",[e._v(\"上面的配置只是指定了nginx需要转发的服务端列表，并没有指定分配策略。\")]),e._v(\" \"),t(\"h4\",{attrs:{id:\"nginx实现负载均衡的策略\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#nginx实现负载均衡的策略\"}},[e._v(\"#\")]),e._v(\" nginx实现负载均衡的策略\")]),e._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"https://lsqimg-1257917459.cos-website.ap-beijing.myqcloud.com/blog/loadBalancing.png\",alt:\"image\"}})]),e._v(\" \"),t(\"p\",[t(\"strong\",[e._v(\"轮询策略\")])]),e._v(\" \"),t(\"p\",[e._v(\"默认情况下采用的策略，将所有客户端请求轮询分配给服务端。这种策略是可以正常工作的，但是如果其中某一台服务器压力太大，出现延迟，会影响所有分配在这台服务器下的用户。\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"upstream balanceServer {\\n    server 10.1.22.33:12345;\\n    server 10.1.22.34:12345;\\n    server 10.1.22.35:12345;\\n}\\n\")])])]),t(\"p\",[t(\"img\",{attrs:{src:\"https://lsqimg-1257917459.cos-website.ap-beijing.myqcloud.com/blog/nginx5.png\",alt:\"image\"}})]),e._v(\" \"),t(\"p\",[t(\"strong\",[e._v(\"最小连接数策略\")])]),e._v(\" \"),t(\"p\",[e._v(\"将请求优先分配给压力较小的服务器，它可以平衡每个队列的长度，并避免向压力大的服务器添加更多的请求。\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"upstream balanceServer {\\n    least_conn;\\n    server 10.1.22.33:12345;\\n    server 10.1.22.34:12345;\\n    server 10.1.22.35:12345;\\n}\\n\")])])]),t(\"p\",[t(\"img\",{attrs:{src:\"https://lsqimg-1257917459.cos-website.ap-beijing.myqcloud.com/blog/nginx4.png\",alt:\"image\"}})]),e._v(\" \"),t(\"p\",[t(\"strong\",[e._v(\"最快响应时间策略\")])]),e._v(\" \"),t(\"p\",[e._v(\"依赖于NGINX Plus，优先分配给响应时间最短的服务器。\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"upstream balanceServer {\\n    fair;\\n    server 10.1.22.33:12345;\\n    server 10.1.22.34:12345;\\n    server 10.1.22.35:12345;\\n}\\n\")])])]),t(\"p\",[t(\"strong\",[e._v(\"客户端ip绑定\")])]),e._v(\" \"),t(\"p\",[e._v(\"来自同一个ip的请求永远只分配一台服务器，有效解决了动态网页存在的session共享问题。\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"upstream balanceServer {\\n    ip_hash;\\n    server 10.1.22.33:12345;\\n    server 10.1.22.34:12345;\\n    server 10.1.22.35:12345;\\n}\\n\")])])]),t(\"h2\",{attrs:{id:\"静态资源服务器\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#静态资源服务器\"}},[e._v(\"#\")]),e._v(\" 静态资源服务器\")]),e._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[e._v(\"location ~* \\\\.(png|gif|jpg|jpeg)$ {\\n    root    /root/static/;  \\n    autoindex on;\\n    access_log  off;\\n    expires     10h;# 设置过期时间为10小时          \\n}\\n\")])])]),t(\"p\",[e._v(\"匹配以\"),t(\"code\",[e._v(\"png|gif|jpg|jpeg\")]),e._v(\"为结尾的请求，并将请求转发到本地路径，\"),t(\"code\",[e._v(\"root\")]),e._v(\"中指定的路径即nginx本地路径。同时也可以进行一些缓存的设置。\")]),e._v(\" \"),t(\"h2\",{attrs:{id:\"小结\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#小结\"}},[e._v(\"#\")]),e._v(\" 小结\")]),e._v(\" \"),t(\"p\",[e._v(\"nginx的功能非常强大，还有很多需要探索，上面的一些配置都是公司配置的真实应用（精简过了），如果您有什么意见或者建议，欢迎在下方留言...\")])])}),[],!1,null,null,null);v.default=a.exports}}]);","extractedComments":[]}